{"version":3,"sources":["redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","assets/images/movie-cover.png","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","assets/images/ver-todo-18-chevron.svg","components/collection-preview/collection-preview.styles.jsx","components/slider/slider.component.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded","WithSpinner","WrappedComponent","isLoading","otherProps","CollectionItemContainer","styled","div","BackgroundImage","CustomButton","imageUrl","CollectionFooterContainer","NameContainer","span","TypeContainer","PriceContainer","CollectionItem","item","name","addItem","typeFilm","price","className","poster","CollectionPreviewContainer","TitleContainer","h1","ShowContainer","ShowLink","PreviewContainer","responsive","items","SliderComponent","mouseTracking","id","controlsStrategy","CollectionPreview","title","routeName","history","match","navigate","useNavigate","location","useLocation","toUpperCase","onClick","pathname","src","show_all_icon","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","connect","otherCollectionProps","compose","CollectionsOverview"],"mappings":"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","file":"static/js/1.81643fe6.chunk.js","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollections],\r\n    collections =>\r\n        collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\n    createSelector(\r\n        [selectCollections],\r\n        collections => (collections ? collections[collectionUrlParam] : null)\r\n    );\r\n\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n);","import React from \"react\";\r\n\r\nimport Spinner from \"../spinner/spinner.component\";\r\n\r\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) => {\r\n    return isLoading ? (\r\n        <Spinner/>\r\n    ) : (\r\n        <WrappedComponent {...otherProps} />\r\n    )\r\n}\r\n\r\nexport default WithSpinner;","export default __webpack_public_path__ + \"static/media/movie-cover.1d3f64e0.png\";","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 300px;\r\n  align-items: center;\r\n  position: relative;\r\n  background-color: #FFFFFF;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    /*    width: 40vw;\r\n        &:hover {\r\n          .image {\r\n            opacity: unset;\r\n          }\r\n    \r\n          button {\r\n            opacity: unset;\r\n          }\r\n        }*/\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 160px;\r\n  height: 182px;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({imageUrl}) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  margin-left: 15px;\r\n  // margin-right: 15px;\r\n  display: grid;\r\n  //justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 100%;\r\n  height: 40px;\r\n  margin-bottom: 15px;\r\n\r\n`;\r\n\r\nexport const TypeContainer = styled.span`\r\n  width: 100%;\r\n  height: 18px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 100%;\r\n  height: 20px;\r\n  text-align: left;\r\n`;","import React from 'react';\r\n\r\nimport poster from 'assets/images/movie-cover.png';\r\n\r\nimport {\r\n    BackgroundImage,\r\n    CollectionFooterContainer,\r\n    CollectionItemContainer,\r\n    NameContainer,\r\n    PriceContainer,\r\n    TypeContainer\r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({item, addItem}) => {\r\n    const {name, typeFilm, price, imageUrl} = item;\r\n\r\n    return (\r\n        <CollectionItemContainer>\r\n            <BackgroundImage className='image' imageUrl={poster}/>\r\n            <CollectionFooterContainer>\r\n                <NameContainer>{name}</NameContainer>\r\n                <TypeContainer>{typeFilm}</TypeContainer>\r\n                <PriceContainer>{price}</PriceContainer>\r\n            </CollectionFooterContainer>\r\n        </CollectionItemContainer>\r\n    );\r\n};\r\n\r\n\r\nexport default CollectionItem;","export default __webpack_public_path__ + \"static/media/ver-todo-18-chevron.9ae70e1b.svg\";","import styled from 'styled-components';\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n  //display: flex;\r\n  //flex-direction: column;\r\n  margin-bottom: 30px;\r\n  @media screen and (max-width: 800px) {\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.h1`\r\n  font-size: 28px;\r\n  margin-bottom: 25px;\r\n\r\n`;\r\n\r\nexport const ShowContainer = styled.div`\r\n\r\n  display: flex;\r\n  justify-content: right;\r\n  margin-bottom: 20px;\r\n\r\n  .show {\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-items: center;\r\n\r\n    img {\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n\r\n  }\r\n\r\n\r\n`;\r\n\r\nexport const ShowLink = styled.span`\r\n  width: 81px;\r\n  height: 27px;\r\n  //justify-items: center;\r\n  font-family: Poppins;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: normal;\r\n  letter-spacing: normal;\r\n  color: #8200ff;\r\n\r\n\r\n`;\r\n\r\nexport const PreviewContainer = styled.div`\r\n  //display: flex;\r\n  /*  justify-content: space-between;\r\n    @media screen and (max-width: 800px) {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      grid-gap: 15px;\r\n    }*/\r\n`;","import React from 'react';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport 'react-alice-carousel/lib/alice-carousel.css';\r\nimport CollectionItem from \"../collection-item/collection-item.component\";\r\n\r\nconst handleDragStart = (e) => e.preventDefault();\r\n\r\nconst responsive = {\r\n    320: {items: 1},\r\n    480: {items: 2},\r\n    768: {items: 3},\r\n    992: {items: 4},\r\n    1200: {items: 5}\r\n};\r\n\r\nconst SliderComponent = ({items}) => {\r\n\r\n    return (\r\n        <AliceCarousel\r\n            mouseTracking\r\n            items={items\r\n                .map(item => (\r\n                    <CollectionItem key={item.id} item={item}/>\r\n                ))}\r\n            responsive={responsive}\r\n            controlsStrategy=\"alternate\"\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport default SliderComponent;","import React from 'react';\r\nimport {useNavigate, useLocation} from 'react-router-dom';\r\nimport show_all_icon from 'assets/images/ver-todo-18-chevron.svg'\r\n\r\nimport {\r\n    CollectionPreviewContainer,\r\n    PreviewContainer,\r\n    ShowContainer,\r\n    ShowLink,\r\n    TitleContainer\r\n} from './collection-preview.styles';\r\nimport SliderComponent from \"../slider/slider.component\";\r\n\r\nconst CollectionPreview = ({title, items, history, match, routeName}) => {\r\n\r\n    let navigate = useNavigate();\r\n    let location = useLocation();\r\n\r\n    function handleClick() {\r\n        navigate(`${location.pathname}/${routeName}`);\r\n    }\r\n\r\n    return (\r\n        <CollectionPreviewContainer>\r\n            <TitleContainer>\r\n                {title.toUpperCase()}\r\n            </TitleContainer>\r\n            <ShowContainer>\r\n                <div className='show' onClick={handleClick}>\r\n                    <ShowLink>\r\n                        Ver todo\r\n                    </ShowLink>\r\n                    <img src={show_all_icon}/>\r\n                </div>\r\n            </ShowContainer>\r\n            <PreviewContainer>\r\n                <SliderComponent items={items}/>\r\n            </PreviewContainer>\r\n        </CollectionPreviewContainer>\r\n    );\r\n}\r\n\r\nexport default CollectionPreview;","import styled from 'styled-components';\r\n\r\nexport const CollectionsOverviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\nimport CollectionPreview from '../collection-preview/collection-preview.component';\r\n\r\nimport {selectCollectionsForPreview} from '../../redux/shop/shop.selectors';\r\nimport {CollectionsOverviewContainer} from './collections-overview.styles';\r\n\r\nconst CollectionsOverview = ({collections}) => (\r\n    <CollectionsOverviewContainer>\r\n        {collections.map(({id, ...otherCollectionProps}) => (\r\n            <CollectionPreview key={id} {...otherCollectionProps} />\r\n        ))}\r\n    </CollectionsOverviewContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    collections: selectCollectionsForPreview\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);","import {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {compose} from 'redux';\r\n\r\nimport {selectIsCollectionFetching} from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport CollectionsOverview from './collections-overview.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: selectIsCollectionFetching\r\n});\r\n\r\nconst CollectionsOverviewContainer = compose(connect(mapStateToProps), WithSpinner)(CollectionsOverview);\r\n\r\nexport default CollectionsOverviewContainer;"],"sourceRoot":""}